(context 'newIDE);;; purpose; to retrieve the offset of the left matching parenthesis of a string containing s-expressions, given the offset of a right parenthesis.;;; defs(define (char-index character str)  "returns the list of indexes of the specified character char in string str"  (index (fn (c) (= c character)) (explode str)))(define (char-count character str)  "returns the number of occurences of the given character in string str"  (first (count '(character) (explode str))))(define (get-matching-parenthesis str right-parenthesis-index)  "returns the left matching parenthesis given the text and the offset of the right parenthesis"  (letn ((str-prefix (slice str 0 right-parenthesis-index))         (last-s-expr (last (parse str-prefix "(")))         (parenthesis-count (char-count ")" str-prefix)))    (nth parenthesis-count (reverse (char-index "(" str-prefix)))))(define (match-test)  (define sometext "(define (naice-function a b c) (+ a b c))")  (define cursor-pos 40)  (println "The matching left parenthesis' offset is: "           (string (get-matching-parenthesis sometext cursor-pos))))(context 'MAIN);;; eof(newIDE:match-test)